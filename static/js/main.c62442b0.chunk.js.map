{"version":3,"sources":["Feedback/Section/Section.js","Phonebook/Input.js","Phonebook/ContactForm.js","Phonebook/Contact.js","Phonebook/ContactList.js","Phonebook/Filter.js","Phonebook/Phonebook.js","App.js","index.js"],"names":["Section","Input","errorName","errorNumber","errorContactExists","errorNumberExists","name","handleInput","clearErrors","value","TextField","error","id","label","helperText","onChange","onBlur","event","ContactForm","addContact","setErrorContactExists","setErrorNumberExists","useState","setName","number","setNumber","setErrorName","setErrorNumber","className","onSubmit","preventDefault","console","log","uuidv4","autoComplete","Box","p","height","target","type","margin","test","Button","variant","color","Contact","contact","deleteContact","display","alignItems","justifyContent","flexGrow","IconButton","aria-label","onClick","ContactList","list","map","Filter","filter","setFilter","placeholder","Phonebook","contacts","setContacts","useEffect","contactsFomLocalStorage","JSON","parse","localStorage","getItem","setItem","stringify","Container","maxWidth","align","Card","width","find","item","prevState","toLowerCase","includes","newContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c62442b0.chunk.js","sourcesContent":["import './section.scss';\nfunction Section({ title, children }) {\n  return (\n    <div className=\"section\">\n      <h2 className=\"title\">{title}</h2>\n      {children}\n    </div>\n  );\n}\nexport default Section;\n","import TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nconst Input = ({\n  errorName,\n  errorNumber,\n  errorContactExists,\n  errorNumberExists,\n  name,\n  handleInput,\n  clearErrors,\n  value,\n}) => (\n  <>\n    {errorContactExists ? (\n      <TextField\n        error\n        id=\"errorExist\"\n        label=\"Error\"\n        helperText=\"Name exists\"\n        value={value}\n        onChange={handleInput}\n        onBlur={clearErrors}\n      ></TextField>\n    ) : errorNumberExists ? (\n      <TextField\n        error\n        id=\"errorExist\"\n        label=\"Error\"\n        helperText=\"Number exists\"\n        value={value}\n        onChange={handleInput}\n        onBlur={clearErrors}\n      ></TextField>\n    ) : errorName ? (\n      <TextField\n        error\n        id=\"error\"\n        label=\"Error\"\n        helperText=\"Enter valid name\"\n        value={value}\n        onChange={handleInput}\n        onBlur={clearErrors}\n      ></TextField>\n    ) : errorNumber ? (\n      <TextField\n        error\n        id=\"error\"\n        label=\"Error\"\n        helperText=\"Enter valid number\"\n        value={value}\n        onChange={handleInput}\n        onBlur={clearErrors}\n      ></TextField>\n    ) : (\n      <TextField\n        id={name}\n        label={name}\n        value={value}\n        onChange={event => handleInput(event)}\n        // type={type}\n      ></TextField>\n    )}\n  </>\n);\nInput.propTypes = {\n  errorName: PropTypes.bool,\n  errorNumber: PropTypes.bool,\n  errorContactExists: PropTypes.bool,\n  errorNumberExists: PropTypes.bool,\n  name: PropTypes.string,\n  handleInput: PropTypes.func,\n  clearErrors: PropTypes.func,\n  value: PropTypes.string,\n};\nexport default Input;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Input from './Input';\nimport Button from '@material-ui/core/Button';\nimport './phonebook.scss';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport './phonebook.scss';\n\nconst ContactForm = ({\n  addContact,\n  errorContactExists,\n  setErrorContactExists,\n  errorNumberExists,\n  setErrorNumberExists,\n}) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [errorName, setErrorName] = useState(false);\n  const [errorNumber, setErrorNumber] = useState(false);\n  function handleInput(event) {\n    setName(event.target.value);\n    setErrorName(false);\n    setErrorContactExists(false);\n    setErrorNumberExists(false);\n    // console.log(name);\n  }\n  function handleNumberInput(event) {\n    console.log(event.target.value);\n    const regexp = /^[0-9\\b]+$/;\n    if (regexp.test(event.target.value)) setNumber(event.target.value);\n    setErrorNumber(false);\n    setErrorContactExists(false);\n    setErrorNumberExists(false);\n  }\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (name === '') {\n      setErrorName(true);\n      return;\n    }\n    if (number === '') {\n      setErrorNumber(true);\n      return;\n    }\n    console.log(number);\n    console.log(errorContactExists);\n    addContact({ name, id: uuidv4(), number });\n    setName('');\n    setNumber('');\n    // clearErrors();\n  }\n  function clearErrors() {\n    setErrorName(false);\n    setErrorContactExists(false);\n    setErrorNumber(false);\n    setErrorNumberExists(false);\n  }\n\n  return (\n    <form className=\"input-form\" onSubmit={handleFormSubmit} autoComplete=\"off\">\n      <Box p={2}>\n        {/* <Box className=\"input\"> */}\n        <Box height={60}>\n          <Input\n            className=\"input\"\n            errorName={errorName}\n            errorContactExists={errorContactExists}\n            name=\"Name\"\n            handleInput={handleInput}\n            clearErrors={clearErrors}\n            value={name}\n            type=\"string\"\n            margin=\"normal\"\n          />\n        </Box>\n        {/* </Box> */}\n        <Box height={60}>\n          <Input\n            className=\"input\"\n            errorNumber={errorNumber}\n            errorNumberExists={errorNumberExists}\n            name=\"Number\"\n            handleInput={handleNumberInput}\n            clearErrors={clearErrors}\n            value={number}\n            type=\"number\"\n            margin=\"normal\"\n          />\n        </Box>\n      </Box>\n      {/* {addNameInput()} */}\n\n      {/* <label>\n          Number\n          <input\n            type=\"number\"\n            value={number}\n            onChange={handleNumberInput}\n          ></input>\n        </label> */}\n      <Box p={2}>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Add contact\n        </Button>\n      </Box>\n    </form>\n  );\n};\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  errorContactExists: PropTypes.bool,\n  setErrorContactExists: PropTypes.func,\n  errorNumberExists: PropTypes.bool,\n  setErrorNumberExists: PropTypes.func,\n};\n\nexport default ContactForm;\n","import IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nconst Contact = ({ contact: { id, name, number }, deleteContact }) => (\n  <li>\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Box flexGrow={1}>\n        {name}: <span>{number}</span>\n      </Box>\n      <Box>\n        <IconButton aria-label=\"delete\" onClick={() => deleteContact(id)}>\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n    </Box>\n    {/* <button onClick={() => deleteContact(id)}>Delete</button> */}\n  </li>\n);\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n  deleteContact: PropTypes.func,\n};\n// contact: { id, name, number }, deleteContact }\nexport default Contact;\n","import Contact from './Contact';\nimport PropTypes from 'prop-types';\nconst ContactList = ({ list, deleteContact }) => (\n  <ul>\n    {list.map(contact => (\n      <Contact\n        contact={contact}\n        key={contact.id}\n        deleteContact={deleteContact}\n      />\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ).isRequired,\n  deleteContact: PropTypes.func,\n};\nexport default ContactList;\n","import TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nconst Filter = ({ filter, setFilter }) => {\n  function handleFilter(event) {\n    setFilter(event.target.value);\n  }\n  return (\n    <TextField\n      id=\"outlined-search\"\n      label=\"Find contacts\"\n      type=\"search\"\n      variant=\"outlined\"\n      placeholder=\"Name\"\n      value={filter}\n      onChange={handleFilter}\n    />\n  );\n};\nFilter.propTypes = {\n  filter: PropTypes.string,\n  setFilter: PropTypes.func,\n};\nexport default Filter;\n","import React, { useEffect, useState } from 'react';\nimport './phonebook.scss';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport Card from '@material-ui/core/Card';\n\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nconst Phonebook = () => {\n  const [contacts, setContacts] = useState([\n    // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n  const [errorContactExists, setErrorContactExists] = useState(false);\n  const [errorNumberExists, setErrorNumberExists] = useState(false);\n  useEffect(() => {\n    const contactsFomLocalStorage = JSON.parse(\n      localStorage.getItem('contacts'),\n    );\n    if (contactsFomLocalStorage) setContacts(contactsFomLocalStorage);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function addContact(contact) {\n    console.log('hey2');\n    if (contacts.find(item => item.name === contact.name)) {\n      setErrorContactExists(true);\n      console.log('Coooontact exists');\n      return;\n    }\n    if (contacts.find(item => item.number === contact.number)) {\n      setErrorNumberExists(true);\n      console.log('Nuuuuumber exists');\n      console.log(errorContactExists);\n      console.log(errorNumberExists);\n      return;\n    }\n    setContacts(prevState => {\n      return [...prevState, contact];\n    });\n  }\n  function deleteContact(id) {\n    const newContacts = contacts.filter(contact => contact.id !== id);\n\n    setContacts(newContacts);\n  }\n  function filterContacts() {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n  // console.log(contacts);\n  console.log(errorContactExists);\n  console.log(errorNumberExists);\n  return (\n    <Container maxWidth=\"sm\" align=\"center\">\n      <Card className=\"phonebook\" align=\"center\">\n        <h2>Phonebook</h2>\n        <Box width=\"50%\">\n          <ContactForm\n            addContact={addContact}\n            errorContactExists={errorContactExists}\n            setErrorContactExists={setErrorContactExists}\n            errorNumberExists={errorNumberExists}\n            setErrorNumberExists={setErrorNumberExists}\n          />\n        </Box>\n        <h2>Contacts</h2>\n        <Filter setFilter={setFilter} filter={filter} />\n        <Box width=\"50%\">\n          <ContactList list={filterContacts()} deleteContact={deleteContact} />\n        </Box>\n      </Card>\n    </Container>\n  );\n};\nexport default Phonebook;\n","import Feedback from './Feedback/Feedback';\nimport Phonebook from './Phonebook/Phonebook';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n      {/* <Feedback /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}